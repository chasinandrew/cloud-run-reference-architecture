apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  annotations: 
    run.googleapis.com/launch-stage: ALPHA
    run.googleapis.com/ingress: internal-and-cloud-load-balancing 
  name: ${CONTAINER_SERVICE}
spec: #TODO: labels
  template:
    metadata:
      name: ${CONTAINER_SERVICE}-${REVISION_TAG} 
      annotations:
        run.googleapis.com/execution-environment: gen1
        autoscaling.knative.dev/minScale: '3'
        autoscaling.knative.dev/maxScale: '100'
    spec:
      containerConcurrency: 80
      serviceAccountName: ${CLOUD_RUN_SA}
      containers:
      - image: ${CONTAINER_IMAGE}
        name: ${CONTAINER_SERVICE}
        ports: 
        - name: http1
          containerPort: 8080
        env:
        - name: PROJECT_ID
          value: ${PROJECT_ID}
        - name: INSTANCE_CONNECTION_NAME
          value: "todo"
        - name: DB_NAME
          value: "todo"
        - name: DB_PORT
          value: "1433"
        - name: DB_USER
          value: "todo"

  # It is recommended to use the latest version of the Cloud SQL Auth Proxy
  # Make sure to update on a regular schedule!
      - image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.1.0
        name: cloud-sql-proxy
        args:
        # If connecting from a VPC-native GKE cluster, you can use the
        # following flag to have the proxy connect over private IP
        # - "--private-ip"

        # Enable structured logging with LogEntry format:
        - "--structured-logs"

        # Replace DB_PORT with the port the proxy should listen on
        - "--port=<DB_PORT>"
        - "<INSTANCE_CONNECTION_NAME>"
      # You should use resource requests/limits as a best practice to prevent
      # pods from consuming too many resources and affecting the execution of
      # other pods. You should adjust the following values based on what your
      # application needs. For details, see
      # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
          # The proxy's memory use scales linearly with the number of active
          # connections. Fewer open connections will use less memory. Adjust
          # this value based on your application's requirements.
            memory: "2Gi"
          # The proxy's CPU use scales linearly with the amount of IO between
          # the database and the application. Adjust this value based on your
          # application's requirements.
            cpu:    "1"
  traffic:
  - percent: 100
    latestRevision: true
